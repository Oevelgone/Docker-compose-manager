#!/bin/bash

## Include functions file
. $( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/sharedcontent

## VARIABLES ##

declare -r DEFAULT_TS_VOICE_PORT=9987
declare -r DEFAULT_TS_QUERY_PORT=10011
declare -r DEFAULT_TS_FILE_PORT=30033
declare -r DEFAULT_TS_DNS_PORT=41144
declare -r USAGE_MESSAGE="[list|\$VOICE_PORT (default:9987)] {start,stop,restart,up,down,logs[teamspeak|db],cred,cmd} [OPTIONS]"

declare -i TS_VOICE_PORT=${DEFAULT_TS_VOICE_PORT}
declare -i TS_QUERY_PORT=${DEFAULT_TS_QUERY_PORT}
declare -i TS_FILE_PORT=${DEFAULT_TS_FILE_PORT}
declare -i TS_DNS_PORT=${DEFAULT_TS_DNS_PORT}
declare -i PORT_DIFF

## PARSING ARGS ##

if [ "$1" == "list" ]; then
    _listDockerContainers "teamspeak"
elif [ "$1" == "up" ]; then
    declare -a INSTANCES_ARRAY
    _listDockerContainers "teamspeak" "export"
    for i in `seq ${PORT_RANGE[0]} 1 ${PORT_RANGE[1]}`
    do
        if ! containsElement "$i" "${INSTANCES_ARRAY[@]}"; then
            TS_VOICE_PORT=$i
            ACTION="up"
            shift
            ARGS=$@
            break
        fi
    done
elif isnumber $1 ; then
    TS_VOICE_PORT=$1
    ACTION=$2
    shift 2
    ARGS=$@
else
    _usage
fi

## FUNCTIONS ##

declare -r DOCKER_CMD="docker-compose -f ${DOCKERCOMPOSE_FILE} -p teamspeak-${TS_VOICE_PORT}"

_start() {
    ${DOCKER_CMD} start ${ARGS}
}

_stop() {
    ${DOCKER_CMD} stop ${ARGS}
}

_up() {
    ${DOCKER_CMD} up ${ARGS}
}

_down() {
    ${DOCKER_CMD} down ${ARGS}
}

_logs() {
    case $1 in
        teamspeak)
            shift
            ${DOCKER_CMD} logs $@ | grep 'teamspeak_1';;
        db)
            shift
            ${DOCKER_CMD} logs $@ | grep 'db_1';;
        *)
            ${DOCKER_CMD} logs $@;;
    esac
}

_logsFinder() {
    printf "$( ${DOCKER_CMD} logs | grep 'teamspeak_1' | grep $1 )"
}

_parseCredentials() {
    SERVERQUERY_ADMIN_USER=$( _logsFinder loginname | awk -F \" '{print $2}' )
    SERVERQUERY_ADMIN_PASSWORD=$( _logsFinder loginname | awk -F \" '{print $4}' )
    SERVER_ADMIN_TOKEN=$( _logsFinder token | tail -n 1 | awk -F \= '{print $2}' | awk -F ' ' '{print $1}' )
}

_outputCredentials() {
    _parseCredentials
    echo -e "\n   Teamspeak 3 Server Credentials\n
    ----------------------------------------\n
    Server Port : $TS_VOICE_PORT            
    Server Admin Token : $SERVER_ADMIN_TOKEN\n
    ----------------------------------------
    Server Query                            
    ----------------------------------------\n
    Port : $TS_QUERY_PORT                   
    User : $SERVERQUERY_ADMIN_USER          
    Password : $SERVERQUERY_ADMIN_PASSWORD  \n
    ----------------------------------------\n
    File Transfert Port : $TS_FILE_PORT     \n
"
}

_command() {
    ${DOCKER_CMD} ${ARGS}
}

_portDiff() {
    isnumber "$TS_VOICE_PORT" && : || _usage
    PORT_DIFF=$(( TS_VOICE_PORT - DEFAULT_TS_VOICE_PORT ))
}

_updatePorts() {
    TS_QUERY_PORT=$(( TS_QUERY_PORT + PORT_DIFF ))
    TS_FILE_PORT=$(( TS_FILE_PORT + PORT_DIFF ))
    TS_DNS_PORT=$(( TS_DNS_PORT + PORT_DIFF ))
}

_exportENV() {
    export TS_VOICE_PORT
    export TS_QUERY_PORT
    export TS_FILE_PORT
    export TS_DNS_PORT
}

## INIT ##

_portDiff && _updatePorts
_exportENV

case $ACTION in
    start)
        _start;;
    stop)
        _stop;;
    restart)
        _stop && _start;;
    up)
        _up;;
    down)
        _down;;
    logs)
        _logs $ARGS;;
    cred)
        _outputCredentials;;
    cmd)
        _command;;
    *)
        _usage;;
esac
