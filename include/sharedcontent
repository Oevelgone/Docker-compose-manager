#!bin/bash

## Debug options ##
# If this options are set to - instead of +, debug option is active
set +x  # Command traces before executing commands
set +v  # Shell input lines as they are read

## Global Variables ##

declare -r SHAREDCONTENT_FILE="${INCLUDE_PATH}/`basename "${BASH_SOURCE[@]}"`"
declare -r DOCKERCOMPOSE_FILE="${PROJECT_PATH}/docker-compose.yml"
declare -r MODULE_PATH="${PROJECT_PATH}/module"

## Global Functions ##

_usage() {
    [[ -z "${usage_message// }" ]] && echo "Undefined variable \$usage_message in \"${module_name}\" module." || echo -e "Usage : `basename "$0"` $usage_message"
    exit 1
}

_error() {
    [[ -z "${1// }" ]] && echo "Undefined error, exit." 1>&2 || echo -e "Error : `basename "$0"` $1" 1>&2
    exit 1
}

_listDockerContainers() {
    local CONTAINERS=( $( docker ps -a | grep "$1"_ | tr " " _ ) )
    for c in ${CONTAINERS[@]}; do
        local STATUS=$( printf $c | awk -F '_[_]+' '{print $5}' | tr "_" " " )
        if [[ $STATUS =~ ^Exited.* ]]; then
            local INSTANCE=$( printf $c | awk -F '_[_]+' '{print $6}' | sed -r 's/^.{9}//' | awk -F '_' '{print $1}' )
        else
            local INSTANCE=$( printf $c | awk -F '_[_]+' '{print $7}' | sed -r 's/^.{9}//' | awk -F '_' '{print $1}' )
        fi

        if [ "$2" == "export" ]; then
            instances_array+=("$INSTANCE")
        else
            echo "Server $INSTANCE -- Status : $STATUS"
        fi
    done

    if [ ! "$2" == "export" ]; then
        exit 0
    fi
}

_evalPortList() {
    for key in "${!port_list[@]}"
    do
        if [ "$key" != "primary" ]; then
            eval "export $1"
        fi
    done
}

isnumber() { # isnumber "${VAR}"
    [[ "$1" =~ ^-?[0-9]+$ ]]
}

function_exist() {
    if [ -n "$(type -t $1)" ] && [ "$(type -t $1)" = function ]; then 
        return 0
    else
        return 1
    fi
}

containsElement() { # containsElement "ELEMENT" "${ARRAY[@]}"
    local e
    for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
    return 1
}
