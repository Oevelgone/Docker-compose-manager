#!bin/bash

## Global Functions ##

_usage() {
    [[ -z "${usage_message// }" ]] && echo "Undefined variable \$usage_message in \"${module_name}\" module." || echo -e "Usage : `basename "$0"` $usage_message"
    exit 1
}

_error() {
    [[ -z "${1// }" ]] && echo "Undefined error, exit." 1>&2 || echo -e "Error : `basename "$0"` $1" 1>&2
    exit 1
}

_listDockerContainers() {
    local CONTAINERS=( $( docker ps -a | grep "$1"_ | tr " " _ ) )
    for c in ${CONTAINERS[@]}; do
        local STATUS=$( printf $c | awk -F '_[_]+' '{print $5}' | tr "_" " " )
        if [[ $STATUS =~ ^Exited.* ]]; then
            local INSTANCE=$( printf $c | awk -F '_[_]+' '{print $6}' | sed -r 's/^.{9}//' | awk -F '_' '{print $1}' )
        else
            local INSTANCE=$( printf $c | awk -F '_[_]+' '{print $7}' | sed -r 's/^.{9}//' | awk -F '_' '{print $1}' )
        fi

        if [ "$2" == "export" ]; then
            instances_array+=("$INSTANCE")
        else
            echo "Server $INSTANCE -- Status : $STATUS"
        fi
    done

    if [ ! "$2" == "export" ]; then
        exit 0
    fi
}

_evalPortList() {
    for key in "${!port_list[@]}"
    do
        if [ "$key" != "primary" ]; then
            eval "export $1"
        fi
    done
}

isnumber() { # isnumber "${VAR}"
    [[ "$1" =~ ^-?[0-9]+$ ]]
}

function_exist() {
    if [ -n "$(type -t $1)" ] && [ "$(type -t $1)" = function ]; then 
        return 0
    else
        return 1
    fi
}

containsElement() { # containsElement "ELEMENT" "${ARRAY[@]}"
    local e
    for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
    return 1
}

if ! function_exist "_start"; then
    _start() {
        ${docker_cmd} start $1
    }
fi

if ! function_exist "_stop"; then
    _stop() {
        ${docker_cmd} stop $1
    }
fi

if ! function_exist "_up"; then
    _up() {
        ${docker_cmd} up $1
    }
fi

if ! function_exist "_down"; then
    _down() {
        ${docker_cmd} down $1
    }
fi

if ! function_exist "_logs"; then
    _logs() {
        ${docker_cmd} logs $1
    }
fi

if ! function_exist "_command"; then
_command() {
    ${docker_cmd} $1
}
fi

_logsFinder() {
    printf "$( ${docker_cmd} logs | grep ${module_name}'_' | grep $1 )"
}

_portDiff() {
    isnumber "$PRIMARY_PORT" && : || _usage
    port_diff=$(( PRIMARY_PORT - DEFAULT_PRIMARY_PORT ))
}

_updatePorts() {
    _evalPortList '${module_name^^}_${key^^}_PORT=$(( ${port_list[$key]} + port_diff ))'
}

_callCredentials() {
    # Check if credentials functions exist

    if ! function_exist "_parseCredentials"; then
        _error "FATAL ERROR : Function _parseCredentials not defined in \"${module_name}\" module."
    fi

    if ! function_exist "_outputCredentials"; then
        _error "FATAL ERROR : Function _outputCredentials not defined in \"${module_name}\" module."
    fi

    _outputCredentials
}
