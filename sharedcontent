#!bin/bash

## Debug options ##
# If this options are set to - instead of +, debug option is active
set +x  # Command traces before executing commands
set +v  # Shell input lines as they are read

## Global Variables ##

declare -r PROJECT_DIRECTORY="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
declare -r SHAREDCONTENT_FILE="${PROJECT_DIRECTORY}/`basename "${BASH_SOURCE[@]}"`"
declare -r DOCKERCOMPOSE_FILE="${PROJECT_DIRECTORY}/docker-compose.yml"

## Includes ##

. ${PROJECT_DIRECTORY}/config/settings.conf

## Check Functions ##

isnumber() {
    [[ "$1" =~ ^-?[0-9]+$ ]]
}

_usage() {
    [[ -z "${USAGE_MESSAGE// }" ]] && echo "Undefined variable \$USAGE_MESSAGE in `basename "$0"`." || echo "Usage : `basename "$0"` $USAGE_MESSAGE"
    exit 1
}

_listDockerContainers() {
    local CONTAINERS=( $( docker ps -a | grep "$1"_ | tr " " _ ) )
    for c in ${CONTAINERS[@]}; do
        local STATUS=$( printf $c | awk -F '_[_]+' '{print $5}' | tr "_" " " )
        if [[ $STATUS =~ ^Exited.* ]]; then
            local INSTANCE=$( printf $c | awk -F '_[_]+' '{print $6}' | sed -r 's/^.{9}//' | awk -F '_' '{print $1}' )
        else
            local INSTANCE=$( printf $c | awk -F '_[_]+' '{print $7}' | sed -r 's/^.{9}//' | awk -F '_' '{print $1}' )
        fi
        
        if [ "$2" == "export" ]; then
            INSTANCES_ARRAY+=("$INSTANCE")
        else
            echo "Server $INSTANCE -- Status : $STATUS"
        fi
    done
    
    if [ ! "$2" == "export" ]; then
        exit 0
    fi
}

containsElement () { # containsElement "ELEMENT" "${ARRAY[@]}"
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}
